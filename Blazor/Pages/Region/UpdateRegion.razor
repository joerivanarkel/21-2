@page "/updateregion"

<PageTitle>Update Region</PageTitle>

@using Blazor.Data
@using Data.Models
@inject IRegionServiceUI RegionServiceUI
@inject ICityServiceUI CityServiceUI
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<h1>Update Region</h1>

@if (region == null)
{
        <p><em>Loading...</em></p>
}
else
{
        <RadzenTemplateForm Data="@region" Submit="@((Region region) => { Create(region); })">
            <div class="row">
                <div class="col-md-3">
                    <RadzenFieldset Text="Enter details">
                        <div style="margin-bottom: 1rem;" class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel Text="Name" />
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox @bind-Value="region.Name" style="width: 100%;" Name="Name" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel Text="Capital" />
                            </div>
                            <div class="col-md-8">
                                <RadzenDropDown @bind-Value="region.RegionCapital" AllowClear="true"
                            Placeholder="Select something" Data="@cities" style="width: 100%;" TextProperty="Name"
                            ValueProperty="region.RegionCapital" Name="RegionCapital">
                                </RadzenDropDown>
                            </div>
                        </div>
                    </RadzenFieldset>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4" style="margin-top: 16px;">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                </div>
            </div>
        </RadzenTemplateForm>
}

@code
{
    private Region region = new Region();
    private City city = new City();
    private int _foundId;

    private IEnumerable<Region>? regions;
    private IEnumerable<City>? cities;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var _id))
        {
            _foundId = Convert.ToInt32(_id);
        }
        regions = await RegionServiceUI.GetAsync();
        cities = await CityServiceUI.GetCitiesAsync();
    }
    private void Create(Region region)
    {
        region.Id = _foundId;
        RegionServiceUI.UpdateAsync(region);
        NavigationManager.NavigateTo("/region");
    }
}
