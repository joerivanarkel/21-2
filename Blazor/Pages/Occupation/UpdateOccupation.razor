@page "/updateoccupation"

<PageTitle>Update Occupationy</PageTitle>

@using Blazor.Data
@using Data.Models
@inject IOccupationServiceUI OccupationServiceUI
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<h1>Update Occupation</h1>

@if (occupations == null)
{
        <p><em>Loading...</em></p>
}
else
{
        <RadzenTemplateForm Data="@occupation" Submit="@((Occupation occupation) => { Create(occupation); })">
            <div class="row">
                <div class="col-md-3">
                    <RadzenFieldset Text="Enter details">
                        <div style="margin-bottom: 1rem;" class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel Text="Name" />
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox @bind-Value="occupation.Name" style="width: 100%;" Name="Name" />
                            </div>
                        </div>
                    </RadzenFieldset>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4" style="margin-top: 16px;">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                </div>
            </div>
        </RadzenTemplateForm>
}

@code
{
    private Occupation occupation = new Occupation();
    private IEnumerable<Occupation>? occupations;
    private int _foundId;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var _id))
        {
            _foundId = Convert.ToInt32(_id);
        }
        occupations = await OccupationServiceUI.GetAsync();
    }

    private void Create(Occupation occupation)
    {
        occupation.Id = _foundId;
        OccupationServiceUI.UpdateAsync(occupation);
        NavigationManager.NavigateTo("/occupation");
    }
}
