@page "/person"

<PageTitle>Person Table</PageTitle>

@using Blazor.Data
@using Data.Models
@inject IPersonServiceUI PersonServiceUI
@inject NavigationManager NavManager

<h1>Person Table</h1>
<RadzenButton Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click=@(() =>
    NavManager.NavigateTo("/createperson")) Text="Create New" />

@if (persons == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (persons.Count() == 0)
    {
        <p><em>No persons found</em></p>
    }
    else
    {
        <RadzenDataGrid Data="@persons" TItem="Person" AllowPaging="true" AllowSorting="true" AllowFiltering="true">
            <Columns>
                <RadzenDataGridColumn TItem="Person" Property="firstName" Title="First Name" />
                <RadzenDataGridColumn TItem="Person" Property="lastName" Title="Last Name" />
                <RadzenDataGridColumn TItem="Person" Property="birthplace" Title="Birthplace" />
                <RadzenDataGridColumn TItem="Person" Property="birthdate" Title="Birthdate" />
                <RadzenDataGridColumn TItem="Person" Property="Sex" Title="Sex" />

                <RadzenDataGridColumn TItem="Person" Width="160px" Title="Edit" Sortable="false" Filterable="false">
                    <Template Context="data">
                        <RadzenButton ButtonStyle="ButtonStyle.Warning" Class="m-1" Click=@(() =>
                    NavManager.NavigateTo("/updateperson")) Text="Edit" />
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Person" Width="160px" Title="Delete" Sortable="false" Filterable="false">
                    <Template Context="data">
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Class="m-1" Click=@(() =>
                    NavManager.NavigateTo("/deleteperson")) Text="Delete" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
}

@code {
    private IEnumerable<Person>? persons;

    protected override async Task OnInitializedAsync()
    {
        persons = await PersonServiceUI.GetAsync();
    }
}
