@page "/editperson/{id}"

<PageTitle>Update Person</PageTitle>

@using Blazor.Data
@using Data.Models
@inject IOccupationServiceUI OccupationServiceUI
@inject IPersonServiceUI PersonServiceUI
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<h1>Update Person</h1>

@if (person == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenTemplateForm Data="@person" Submit="@((Person person) => { Update(person); })">
        <div class="row">
            <div class="col-md-3">
                <RadzenFieldset Text="Enter details">
                    <div style="margin-bottom: 1rem;" class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="First Name" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="person.firstName" style="width: 100%;" Name="FirstName" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem;" class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Last Name" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="person.lastName" style="width: 100%;" Name="LastName" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem;" class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Birthplace" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="person.birthplace" style="width: 100%;" Name="Birthplace" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Occupation" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDropDown @bind-Value="person.Occupation" AllowClear="true" Data="@occupations" style="width: 100%;" TValue="Occupation" TextProperty="Name" Name="Occupation">
                            </RadzenDropDown>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Birth Date" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDatePicker style="width: 100%;" Name="Birthdate" @bind-Value="person.birthdate" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Ruler" />
                        </div>
                        <div class="col-md-8">
                            <RadzenCheckBox @bind-Value=@person.IsRuler Name="IsRuler" TValue="bool" />
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4" style="margin-top: 16px;">
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
            </div>
        </div>
    </RadzenTemplateForm>
}

@code
{
    [Parameter]
    public string id { get; set; }
    private Person person = new Person();
    private int _parsedId;

    private IEnumerable<Occupation>? occupations;

    protected override async Task OnInitializedAsync()
    {
        _parsedId = int.Parse(id);
        person = await PersonServiceUI.GetByIdAsync(_parsedId);
        occupations = await OccupationServiceUI.GetAsync();
    }
    private void Update(Person person)
    {
        person.Id = _parsedId;
        PersonServiceUI.UpdateAsync(person);
        NavigationManager.NavigateTo("/person");
    }
}
