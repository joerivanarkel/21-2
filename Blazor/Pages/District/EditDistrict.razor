@page "/editdistrict/{id}"

<PageTitle>Edit District</PageTitle>

@using Blazor.Data
@using Data.Models
@inject IDistrictServiceUI DistrictServiceUI
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<h1>Edit District</h1>

@if (districts == null)
{
        <p><em>Loading...</em></p>
}
else
{
        <RadzenTemplateForm Data="@district" Submit="@((District district) => { Update(district); })">
            <div class="row">
                <div class="col-md-3">
                    <RadzenFieldset Text="Enter details">
                        <div style="margin-bottom: 1rem;" class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel Text="Name" />
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox @bind-Value="district.Name" style="width: 100%;" Name="Name" />
                            </div>
                        </div>
                    </RadzenFieldset>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4" style="margin-top: 16px;">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                </div>
            </div>
        </RadzenTemplateForm>
}

@code
{
    [Parameter]
    public string id { get; set; }
    private District district = new District();
    private int _parsedId;
    
    private IEnumerable<District>? districts;

    protected override async Task OnInitializedAsync()
    {
        _parsedId = int.Parse(id);
        district = await DistrictServiceUI.GetByIdAsync(_parsedId);
        districts = await DistrictServiceUI.GetAsync();
    }
    private void Update(District district)
    {
        district.Id = _parsedId;
        DistrictServiceUI.UpdateAsync(district);
        NavigationManager.NavigateTo("/district");
    }
}
