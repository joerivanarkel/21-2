@page "/editregion/{id}"

<PageTitle>Update Region</PageTitle>

@using Blazor.Data
@using Data.Models
@inject IRegionServiceUI RegionServiceUI
@inject ICityServiceUI CityServiceUI
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<h1>Update Region</h1>

@if (region == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenTemplateForm Data="@region" Submit="@((Region region) => { Update(region); })">
        <div class="row">
            <div class="col-md-3">
                <RadzenFieldset Text="Enter details">
                    <div style="margin-bottom: 1rem;" class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Name" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="region.Name" style="width: 100%;" Name="Name" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Capital" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDropDown @bind-Value="region.RegionCapital" AllowClear="true" TValue="City" Data="@cities" style="width: 100%;" TextProperty="Name" Name="RegionCapital">
                            </RadzenDropDown>
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4" style="margin-top: 16px;">
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
            </div>
        </div>
    </RadzenTemplateForm>
}

@code
{
    [Parameter]
    public string id { get; set; }
    private Region region = new Region();
    private int _parsedId;

    private IEnumerable<City>? cities;

    protected override async Task OnInitializedAsync()
    {
        _parsedId = int.Parse(id);
        region = await RegionServiceUI.GetByIdAsync(_parsedId);
        cities = await CityServiceUI.GetCitiesAsync();
    }
    private void Update(Region region)
    {
        region.Id = _parsedId;
        RegionServiceUI.UpdateAsync(region);
        NavigationManager.NavigateTo("/region");
    }
}
